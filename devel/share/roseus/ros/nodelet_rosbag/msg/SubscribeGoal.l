;; Auto-generated. Do not edit!


(when (boundp 'nodelet_rosbag::SubscribeGoal)
  (if (not (find-package "NODELET_ROSBAG"))
    (make-package "NODELET_ROSBAG"))
  (shadow 'SubscribeGoal (find-package "NODELET_ROSBAG")))
(unless (find-package "NODELET_ROSBAG::SUBSCRIBEGOAL")
  (make-package "NODELET_ROSBAG::SUBSCRIBEGOAL"))

(in-package "ROS")
;;//! \htmlinclude SubscribeGoal.msg.html


(defclass nodelet_rosbag::SubscribeGoal
  :super ros::object
  :slots (_topics ))

(defmethod nodelet_rosbag::SubscribeGoal
  (:init
   (&key
    ((:topics __topics) (let (r) (dotimes (i 0) (push "" r)) r))
    )
   (send-super :init)
   (setq _topics __topics)
   self)
  (:topics
   (&optional __topics)
   (if __topics (setq _topics __topics)) _topics)
  (:serialization-length
   ()
   (+
    ;; string[] _topics
    (apply #'+ (mapcar #'(lambda (x) (+ 4 (length x))) _topics)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string[] _topics
     (write-long (length _topics) s)
     (dolist (elem _topics)
       (write-long (length elem) s) (princ elem s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string[] _topics
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _topics (make-list n))
     (dotimes (i n)
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setf (elt _topics i) (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
     ))
   ;;
   self)
  )

(setf (get nodelet_rosbag::SubscribeGoal :md5sum-) "b0eef9a05d4e829092fc2f2c3c2aad3d")
(setf (get nodelet_rosbag::SubscribeGoal :datatype-) "nodelet_rosbag/SubscribeGoal")
(setf (get nodelet_rosbag::SubscribeGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
string[] topics

")



(provide :nodelet_rosbag/SubscribeGoal "b0eef9a05d4e829092fc2f2c3c2aad3d")


